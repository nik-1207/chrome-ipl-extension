{"version":3,"sources":["components/Batter.jsx","components/Bowler.jsx","components/PlayerCard.jsx","components/TeamCard.jsx","App.js","config.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","columns","id","label","width","maxWidth","align","Batter","useState","Batsman","setBatsman","useEffect","db","getDatabase","path","ref","onValue","snapshot","data","val","TableContainer","sx","maxwidth","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","style","TableBody","Object","keys","key","index","hover","role","tabIndex","name","runs","balls","fours","sixes","Bowler","setBowler","bgcolor","red","overs","maidens","wickets","PlayerCard","Card","CardContent","TeamCard","currentOver","setCurrentOver","currentRuns","setCurrentRuns","currentWickets","setCurrentWickets","CardHeader","avatar","Avatar","title","subheader","action","IconButton","Grid","container","spacing","item","xs","Typography","variant","display","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff888d0.chunk.js","sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { styled } from \"@mui/material/styles\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\nconst columns = [\n  { id: \"batters\", label: \"Batters\", width: 140 },\n  { id: \"runs\", label: \"R\", maxWidth: 49, align: \"right\" },\n  { id: \"balls\", label: \"B\", maxWidth: 49, align: \"right\" },\n  { id: \"fours\", label: \"4s\", maxWidth: 49, align: \"right\" },\n  { id: \"sixs\", label: \"6s\", maxWidth: 49, align: \"right\" },\n];\n\nfunction Batter() {\n  const [Batsman, setBatsman] = useState();\n  useEffect(() => {\n    const db = getDatabase();\n    const path = ref(db, \"/Batsman\");\n    onValue(path, (snapshot) => {\n      const data = snapshot.val();\n      setBatsman(data);\n    });\n  }, []);\n  return (\n    <TableContainer sx={{ maxwidth: 345 }}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            {columns.map((column) => (\n              <StyledTableCell\n                key={column.id}\n                align={column.align}\n                style={{ maxWidth: column.maxWidth }}\n              >\n                {column.label}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Batsman &&\n            Object.keys(Batsman).map((key, index) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                  <TableCell align=\"right\">{Batsman[key].name}</TableCell>\n                  <TableCell align=\"right\">{Batsman[key].runs}</TableCell>\n                  <TableCell align=\"right\">{Batsman[key].balls}</TableCell>\n                  <TableCell align=\"right\">{Batsman[key].fours}</TableCell>\n                  <TableCell align=\"right\">{Batsman[key].sixes}</TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Batter;\n","import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport { styled } from \"@mui/material/styles\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { red } from \"@mui/material/colors\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\nconst columns = [\n  { id: \"bowlers\", label: \"Bowlers\", width: 140 },\n  { id: \"overs\", label: \"O\", maxWidth: 49, align: \"right\" },\n  { id: \"maidens\", label: \"M\", maxWidth: 49, align: \"right\" },\n  { id: \"runs\", label: \"R\", maxWidth: 49, align: \"right\" },\n  { id: \"wickets\", label: \"W\", maxWidth: 49, align: \"right\" },\n];\n\nfunction Bowler() {\n  const [Bowler, setBowler] = useState();\n  useEffect(() => {\n    const db = getDatabase();\n    const path = ref(db, \"/Bowlers\");\n    onValue(path, (snapshot) => {\n      const data = snapshot.val();\n      setBowler(data);\n    });\n  }, []);\n  return (\n    <TableContainer sx={{ maxwidth: 345 }}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            {columns.map((column) => (\n              <StyledTableCell\n                key={column.id}\n                align={column.align}\n                style={{ maxWidth: column.maxWidth, bgcolor: red }}\n              >\n                {column.label}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Bowler &&\n            Object.keys(Bowler).map((key, index) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                  <TableCell align=\"right\">{Bowler[key].name}</TableCell>\n                  <TableCell align=\"right\">{Bowler[key].overs}</TableCell>\n                  <TableCell align=\"right\">{Bowler[key].maidens}</TableCell>\n                  <TableCell align=\"right\">{Bowler[key].runs}</TableCell>\n                  <TableCell align=\"right\">{Bowler[key].wickets}</TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Bowler;\n","import { Card, CardContent } from \"@mui/material\";\nimport React from \"react\";\nimport Batter from \"./Batter\";\nimport Bowler from \"./Bowler\";\nfunction PlayerCard() {\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n      <CardContent>\n        <Batter />\n      </CardContent>\n      <CardContent>\n        <Bowler />\n      </CardContent>\n    </Card>\n  );\n}\nexport default PlayerCard;\n","import { Card, CardHeader } from \"@mui/material\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { red } from \"@mui/material/colors\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport IconButton from \"@mui/material/IconButton\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nfunction TeamCard() {\n  const [currentOver, setCurrentOver] = useState();\n  const [currentRuns, setCurrentRuns] = useState();\n  const [currentWickets, setCurrentWickets] = useState();\n\n  useEffect(() => {\n    const db = getDatabase();\n    const path = ref(db, \"/matchDetails\");\n    onValue(path, (snapshot) => {\n      const data = snapshot.val();\n      setCurrentOver(data.currentOver);\n      setCurrentRuns(data.currentRuns);\n      setCurrentWickets(data.currentWickets);\n    });\n  });\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"live score\">\n            IPL\n          </Avatar>\n        }\n        title=\"Live Score\"\n        subheader=\"2nd Match, Dubai, September 14, 2021\"\n        action={\n          <div>\n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n          </div>\n        }\n      />\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Typography>Chennai Super Kings</Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <Typography>({currentOver}/20)</Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <Typography>\n              {currentRuns}/{currentWickets}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Typography>Mumbai Indians</Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <Typography></Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <Typography></Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardContent>\n        <Typography variant=\"body2\" display=\"inline\" color=\"primary\">\n          Chennai Super Kings won the toss & choose to bat\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\nexport default TeamCard;\n","import PlayerCard from \"./components/PlayerCard\";\nimport TeamCard from \"./components/TeamCard\";\nimport { initializeApp } from \"firebase/app\";\nimport { firebase } from \"./config\";\n\ninitializeApp(firebase);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TeamCard />\n      <PlayerCard />\n    </div>\n  );\n}\n\nexport default App;\n","export const firebase = {\n  apiKey: \"AIzaSyB6bWK3b8cEoR3Ai_q_HsfpKxzU7L_gals\",\n  authDomain: \"ipl-8788e.firebaseapp.com\",\n  databaseURL: \"https://ipl-8788e-default-rtdb.firebaseio.com\",\n  projectId: \"ipl-8788e\",\n  storageBucket: \"ipl-8788e.appspot.com\",\n  messagingSenderId: \"998000287381\",\n  appId: \"1:998000287381:web:ae72e58405adf5dd9b059c\",\n  measurementId: \"G-K20MC6QP2J\",\n};\n\n/*\n\n  useEffect(() => {\n    const db = getDatabase();\n    const starCountRef = ref(db, \"users/\");\n    onValue(starCountRef, (snapshot) => {\n      console.log(snapshot.val());\n    });\n  });\n  \n */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}